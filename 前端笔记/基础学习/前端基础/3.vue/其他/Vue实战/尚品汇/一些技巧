##### 1. nprogress

nprogress 进度条，路由跳转时的加载进度条；也可用于发送请求时的加载进度条

##### 2. 防抖

前面的所有触发都被取消，最后一次执行在规定时间之后才会触发，也就是说如果连续快速的触发只会执行一次

lodash 插件；debounce 函数

##### 3. 节流

在规定的间隔时间范围内不会重复触发回调，只有大于这个时间间隔才会触发回调，把频繁触发变为少量触发

_.throttle()函数

##### 4. 路由跳转

有多个路由跳转时，尽量不用 router-link ，毕竟是个组件，像二三级这种菜单是需要频繁销毁创建的；

最好用编程式导航，可以的话结合事件委派（其实就是事件冒泡）可以大幅度减少函数的回调（只剩一个点击函数）；传递 enent 参数 ，event.target 获取到当前触发这个事件的节点；event.dataset 获取到节点的自定义属性与属性值，注意：自定义属性名会被浏览器自动改为小写

##### 5. swiper 插件

用于快速创建轮播图的，代码直接参考官网示例；

注意：页面结构得已经存在才能正常显示，有时候页面结构需要发请求得到数据才渲染，这时候可以通过 watch 和 this.$nexTick() 函数保证结构已存在才执行轮播图 js 代码

此方式适用所有需要操作 dom 元素节点的插件

##### 6. ~@

在css中也可以用@代表 src 文件夹，但是前面要加`~` 

`background-img: url(~@/assets/images/)`

##### 7. vuex

一般全局的属性，例如用户登录相关的token等，发请求可以放到vuex中

其他请求也可酌情放在vuex中，也相当于是封装了一下，之后需要发请求获取数据时，只需要dispatch就行了

但需要注意，存储在vuex中的数据，页面一刷新就没了